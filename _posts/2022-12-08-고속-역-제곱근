---
title:  ""

categories:
  - 
tags:
  - []

toc: true
toc_sticky: true
 
date: 2022-
last_modified_at: 2022-
---

<h1>주의! 아직 작성중인 글입니다.</h1>

---

<h1>고속 역 제곱근(fast inverse square root)</h1>

1 / sqrt(x)를 컴퓨터에서 빠르고 효율적으로 계산하기 위한 알고리즘이다.  
주로 컴퓨터 그래픽스에서 조명과 셰이딩을 위한 입사각과 반사각 계산에 사용되며, 비용 절감 효과가 있는 코드이다.

```
{
    long i;
    float x2, y;
    const float threehalfs = 1.5F;

    x2 = number * 0.5F;
    y  = number;
    i  = * ( long * ) &y;                       // evil floating point bit level hacking
    i  = 0x5f3759df - ( i >> 1 );               // what the fuck? 
    y  = * ( float * ) &i;
    y  = y * ( threehalfs - ( x2 * y * y ) );   // 1st iteration
//  y  = y * ( threehalfs - ( x2 * y * y ) );   // 2nd iteration, this can be removed

    return y;
}
```

1. C언어의 자료형 크기에 대한 이해가 필요하다.

- long 변수는 4바이트(= 32비트) 크기를 가지며, 형식은 다음과 같다.
00000000 00000000 00000000 00000000

- float 변수는 4바이트(= 32비트) 크기를 가진다.
0 00000000 00000000000000000000000
가장 앞의 한 자리 비트는 부호를 나타내며, 이 자리의 값이 0이면 양수, 1이면 음수를 뜻한다.  
뒤의 8자리는 지수(2^E)를 나타내며, E = -127일 때 00000000, E = +128일 때 11111111이다.  
그 다음의 23자리는 가수부(M)을 나타낸다.

---
<h1>참고</h1>

[https://ko.wikipedia.org/wiki/%EA%B3%A0%EC%86%8D_%EC%97%AD_%EC%A0%9C%EA%B3%B1%EA%B7%BC](위키백과)