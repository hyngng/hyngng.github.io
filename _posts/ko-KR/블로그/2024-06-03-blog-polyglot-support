---
title: "깃허브 블로그에 다국어 지원 추가하기"

categories: [블로그]
tags: [블로그, 다국어, jekyll-polyglot]
start_with_ads: true

toc: true
toc_sticky: true

lang: ko-KR

date: 2024-06-03 22:00:00 +0900
last_modified_at: 2024-06-03 22:00:00 +0900
---

## **들어가며**

최근 [제 인스타그램](https://www.instagram.com/hynrng/)에 이 블로그 URL을 등록해놨는데 생각보다 미국, 캐나다, 아일랜드 등지에서 블로그를 방문하는 외국인 분들이 간간히 보였습니다. 그런데 제 블로그는 기본적으로 한국어로만 작성된 웹페이지고, 외국인 분들은 한국어를 모르시니 대부분은 아마 "이게 뭔 소리야.." 하고 당황하며 나가셨을 겁니다.

때문에 제 블로그를 방문해주시는 우연을 좀 더 의미있는 것으로 만들고 싶다는 고민이 있었는데, 최근에 `jekyll-polyglot`이라는 다국어 지원 플러그인을 알게 되었습니다. 분명 [전 포스트](https://hynrng.github.io/posts/webmasters-and-seo/)에서 블로그 관련 포스트를 그만 쓰고 싶다고 말한 적이 있지만 다국어 지원이라는 기능이 워낙 흥미가 돋아서 말이죠, 한 번 더 블로그를 수정해주게 되었습니다.

다국어 지원 기능을 추가해보니 플러그인을 추가한다고 끝나는 것이 아니라 사이트 호환성과 관련해서 이것저것 최적화해줄 필요가 있었습니다. 지킬 사이트에 다국어를 추가하려는 분들이 원체 적어서 대부분의 시간을 리버스 엔지니어링으로 보내느라 약 5일 정도 걸린 것 같네요. 구체적으로 플러그인을 적용하는 과정과 방법을 정리하겠습니다.

## **플러그인 소개**

깃허브 블로그 환경에서 다국어 기능을 구현할 수 있는 지킬 플러그인은 크게 `jekyll-polyglot`과 `jekyll-multiple-languages-plugin` 두 가지가 있습니다. 이중에 제가 사용한 것은 전자의 플러그인 `jekyll-polyglot`으로, 포스트 프론트매터의 `lang` 값을 이용해 루트 URL 뒤에 I18N 언어 코드를 추가하는 식으로 다국어 번역본 URL을 생성합니다.

이 플러그인은 후자의 플러그인 `jekyll-multiple-languages-plugin`을 모델로 만들어졌다고 하며, 공식 가이드는 설치 방법부터 사용시 주의사항까지 [Polyglot 깃허브](https://github.com/untra/polyglot?tab=readme-ov-file#how-to-use-it)에서 자세히 안내되고 있습니다.

## **사전작업**

### **플러그인 설치 및 세팅**

```ruby
group :jekyll_plugins do
  gem "jekyll-polyglot"
end
```
{: file="Gemfile" }

`Gemfile`에 위와 같이 플러그인을 등록하고 `gem install jekyll-polyglot` 명령어로 설치한 뒤 `_config.yml`{: .filepath }에 다음을 입력해주어야 합니다.

```yaml
plugins:
  - jekyll-polyglot

languages: ["ko", "en"]
default_lang: "ko"
exclude_from_localization: ['javascript', 'images', 'css', 'sitemap.xml']
parallel_localizaion: true
```
{: file="_config.yml" }

> 윈도우 환경에서는 parallel_localization을 false로 설정해주셔야 합니다!
{: .prompt-warning }

### **정규 표현식 버그 수정**

플러그인을 설치하고 빌드를 해보면 _"'relative_url_regex': target of repeat operator is not specified:"_ 에러를 만나게 됩니다. 이 에러는 플러그인의 `site.rb`{: .filepath } 파일에서 일부 정규 표현식이 Chirpy 테마의 `_config.yml`{: .filepath }에서 `exlude: *.gem *.gemspec *.config.js` 등의 와일드카드(*)를 처리하지 못하기 때문에 발생하는데, 문제 해결을 위해선 플러그인 코드 자체를 수정할 필요가 있습니다.[^1]

플러그인을 자체 수정해서 사용해야 하므로 제 경우 프로젝트를 [개인 리포지토리로 fork한 뒤](https://github.com/kurtsson/jekyll-multiple-languages-plugin/fork) `Gemfile`에 다음과 같이 불러와 사용했습니다. 필수사항은 아닙니다.

```ruby
gem 'jekyll-polyglot', git: 'https://github.com/hynrng/jekyll-polyglot', branch: 'master'
```
{: file="Gemfile" }

이후 플러그인의 `jekyll-polyglot-1.8.0/lib/jekyll/polyglot/patches/jekyll`{: .filepath } 경로의 `site.rb`{: .filepath }에서 `relative_url_regex()`와 `absolute_url_regex()` 두 함수를 아래와 같이 수정해주었습니다.

```ruby
def relative_url_regex(disabled = false)
  regex = ''
  unless disabled
    @exclude.each do |x|
      escaped_x = Regexp.escape(x)
      regex += "(?!#{escaped_x})"
    end
    @languages.each do |x|
      escaped_x = Regexp.escape(x)
      regex += "(?!#{escaped_x}\/)"
    end
  end
  start = disabled ? 'ferh' : 'href'
  %r{#{start}="?#{@baseurl}/((?:#{regex}[^,'"\s/?.]+\.?)*(?:/[^\]\[)("'\s]*)?)"}
end

...

def absolute_url_regex(url, disabled = false)
  regex = ''
  unless disabled
    @exclude.each do |x|
      escaped_x = Regexp.escape(x)
      regex += "(?!#{escaped_x})"
    end
    @languages.each do |x|
      escaped_x = Regexp.escape(x)
      regex += "(?!#{escaped_x}\/)"
    end
  end
  start = disabled ? 'ferh' : 'href'
  %r{(?<!hreflang="#{@default_lang}" )#{start}="?#{url}#{@baseurl}/((?:#{regex}[^,'"\s/?.]+\.?)*(?:/[^\]\[)("'\s]*)?)"}
end
```
{: file="site.rb" }

함수를 수정한 뒤 `bundle exec jekyll s` 명령어를 입력해보면 빌드가 문제없이 잘 되는 것을 확인할 수 있습니다.

### **포스트 파일 속성 수정**

번역되길 원하는 포스트의 프론트매터에 언어값을 지정해줘야 합니다. 기본적으로 `ko`, `en`과 같이 I18N 국가코드로 지정해주시면 되며, 저의 경우 `ko-KR`와 `en`으로 작성해주었습니다.

```yaml
---
lang: en
permalink: example-url-here
---
```
{: file="example-page.md"}

이중에 `permalink`는 해당 포스트의 URL 경로를 지정합니다. 이는 지킬에서 동일한 URL을 가진 두 파일은 기본적으로 같은 것으로 취급되기 때문에 원본과 번역본을 인위적으로 구분해주기 위함이며, `permalink`를 작성하는 것이 마음에 들지 않는다면 대신 파일명을 다음과 같이 변경하는 식으로도 구분해줄 수 있습니다.

```
_posts/2010-03-01-salad-recipes-en.md
_posts/2010-03-01-salad-recipes-sv.md
_posts/2010-03-01-salad-recipes-fr.md
```
{: .nolineno }

## **템플릿 수정**

Chirpy 테마에 한정된 내용이므로 다른 지킬 템플릿을 사용하는 분들께서는 생략하고 [다음 문단](#기타-작업)으로 넘어가셔도 좋을 것 같습니다. 다만 저와 비슷하게 템플릿을 수정할 필요가 있을 경우 다음의 내용이 도움이 될 수 있습니다.

- `site.default_lang`: `_config.yml`{: .filepath }에 선언된 기본 언어값입니다.
- `site.active_lang`: 현재 웹페이지에서 활성화되어 있는 언어값입니다.
- `page.lang`: 프론트매터에서 선언된 포스트 언어값입니다.

위 세 개 변수를 활용하면 예를 들어 {% raw %}`{% if page.lang == site.default_lang %}`{% endraw %}와 같은 조건문을 작성하는 식으로 활용할 수 있으며 페이지에서 표시되는 언어를 상황에 맞게 제한할 수 있습니다.

### **언어 불러오기**

{% raw %}
```liquid
```
{: file="" }
{% endraw %}

{% raw %}
```liquid
{% if site.active_lang %}
  {% assign lang = site.active_lang %}
{% elsif site.data.locales[page.lang] %}
  {% assign lang = page.lang %}
{% elsif site.data.locales[site.lang] %}
  {% assign lang = site.lang %}
{% else %}
  {% assign lang = 'en' %}
{% endif %}
```
{: file="_includes/lang.html" }
{% endraw %}

Chirpy 템플릿은 많은 페이지에서 `_includes/lang.html`{: .filepath }를 이용합니다. 해당 파일을 위와 같이 수정한 뒤 레이아웃 파일에서 `lang.html`{: .filepath }을 불러오는 식으로 활용할 수 있습니다.

### **디폴트 페이지**

=> 그 다음으로, /en/ URL에서 한국어 포스트가 나타나는 문제 생김.

sidebar.html, lang.html 수정해주면 됨.

{% raw %}
```
<p class="site-subtitle fst-italic mb-0">{{ site.tagline[site.active_lang] }}</p>

...

<span>{{ site.data.locales[site.active_lang].tabs.home | upcase }}</span>

...

<span>{{ site.data.locales[site.active_lang].tabs.home | upcase }}</span>
```
{: file="_includes/sidebar.html" }
{% endraw %}

{% raw %}
```liquid
{% if site.active_lang %}
  {% assign lang = site.active_lang %}
{% elsif site.data.locales[page.lang] %}
  {% assign lang = page.lang %}
{% elsif site.data.locales[site.lang] %}
  {% assign lang = site.lang %}
{% else %}
  {% assign lang = 'en' %}
{% endif %}
```
{: file="_includes/lang.html" }
{% endraw %}

### **사이드바**
### **홈페이지**

- 페이지네이션: 특정 언어에서 부족한 페이지는 아예 생성 안되게 만들려고 함

### **카테고리**
### **태그 페이지**
### **아카이브 페이지**
### **태그 둘러보기**
### **최근 수정한 글**
### **포스트 네비게이션**
### **관련된 포스트**
### **정보 페이지**

{% raw %}
```liquid
{% if site.active_lang == 'ko-KR' %}
## 한국어 자기소개
...
{% elsif site.active_lang == 'en' %}
## English Self-Introduction
...
{% endif %}
```
{: file="_tabs/about.md" }
{% endraw %}

### **검색창**

> 아직 구현방법을 찾고 있습니다. 작업이 완료되면 글이 업데이트됩니다! 
{: .prompt-info }

### **읽은 시간**

{% raw %}
```liquid
<span
  class="readtime"
  data-bs-toggle="tooltip"
  data-bs-placement="bottom"
  title="{% if site.active_lang == 'ko-KR' %}
           {{ words }}{{ site.data.locales[include.lang].post.words }}
         {% else %}
           {{ words }} {{ site.data.locales[include.lang].post.words }}
         {% endif %}"
>
```
{: file="_includes/read-time.html" }
{% endraw %}

- 글자수가 한국어에서는 `1000자`로 나오지만 영어에서는 `1000 words`로 공백과 함께 안내됨

## **기타 작업**

### **헤더 태그에 페이지 언어 명시**

[구글 검색 센터 문서의 국제 및 다국어 가이드](https://developers.google.com/search/docs/specialty/international/localized-versions?hl=ko)에서 안내하고 있는 사항입니다. 필수사항은 아니지만 검색엔진 최적화(SEO)를 신경쓰고 있다면 헤더에 다음의 코드를 추가하여 페이지의 언어를 명시해주는 것이 좋습니다.

{% raw %}
```liquid
{% I18n_Headers %}
```
{: file="_includes/head.html" }
{% endraw %}

위 코드는 빌드를 거쳐 다음과 같이 변환됩니다.

```liquid
<meta http-equiv="Content-Language" content="ko-KR">
<link rel="alternate" hreflang="ko-KR" href="ttps://hynrng.github.io/posts/:title/"/>
<link rel="alternate" hreflang="en" href="https://hynrng.github.io/en/posts/:title/"/>
```
{: file="header" .nolineno }

### **깃허브 페이지 빌드시 플러그인 포함시키기**

### **사이트맵 수정**

다국어 지원시 가장 큰 문제점중 하나는 사이트맵입니다.

다음과 같이 수정했습니다.

{% raw %}
```liquid
...
{% for lang in site.languages %}
  {% for post in site.posts %}
    {% if lang == post.lang %}
      <url>
        <loc>
          {{ site.url }}
          {% if lang == site.default_lang %}
            {{ post.url }}
          {% else %}
            {{ post.url | prepend: lang | prepend: '/' }}
          {% endif %}
        </loc>
        ...
      </url>
    {% endif %}
  {% endfor %}
{% endfor %}
```
{: file="sitemap.xml" }
{% endraw %}

`site.languages`의 모든 언어에 대해 한 번씩 검사하도록 수정해주었고, 그중에서도 유효하지 않은 페이지는 나타나지 않도록 검사합니다.

전체 코드는 제 깃허브에서 확인할 수 있으며, 사이트맵 결과물은 [이곳](https://hynrng.github.io/sitemap.xml)에서 확인할 수 있습니다. 하단에 `en/posts/first-post/`{: .filepath }와 같이 모든 사이트에 대해 URL이 잘 나타나고 있습니다.

### **피드 수정**

> 아직 구현방법을 찾고 있습니다. 작업이 완료되면 글이 업데이트됩니다! 
{: .prompt-info }

### **언어 전환 버튼**

- 은 ~~해서 (언어별 독점 콘텐츠랄것도 없고, 어차피 안 유용할 텐데) 추가하지 않았지만 만약 원한다면 다음의 코드를 넣을 수 있음.

{% raw %}
```liquid
<div class="lang-container w-100">
  {% for lang in site.languages %}
    <div class="lang" style="display: inline;">
      <a style="
        {% if lang == site.active_lang %}
          font-weight: bold;
        {% endif %}"
        href="
        {% if lang == site.default_lang %}
          {{site.baseurl}}{{page.url}}
        {% else %}
          {{site.baseurl}}/{{ lang }}{{page.url}}
        {% endif %}">
        {{ lang }}
      </a>
      {% if forloop.last == false %}
        <span class="lang-border"> </span>
      {% endif %}
    </div>
  {% endfor %}
</div>
```
{: file="_includes/lang_mode.html"}
{% endraw %}

## **적용 화면**



## **마치며**

기본적으로 유연하지 않습니다. 도중에 이럴거면 그냥 hynrng-en.github.io와 같은 식으로 영어 전용 페이지를 하나 더 만드는게 낫지 않을까 싶기도 했지만 동일 도메인으로 웹마스터도구, 애드센스, 애널리틱스 등을 통합적으로 처리 가능하다는 점을 생각하면 또 다국어 지원 기능을 추가할 가치가 있는 것 같기도 합니다.
도움이 되었으면 좋겠습니다.


<br>

---

[^1]: 이 문제를 플러그인 제작자에게 [문의해봤으나](https://github.com/untra/polyglot/issues/204), 결과적으로는 [이 문서를 근거로](https://jekyllrb.com/docs/configuration/options/#global-configuration) Chirpy 테마가 `_config.yml`{: .filepath }에서 글로벌 패턴을 잘못 사용한 것이라는 답을 받았습니다. 다만 Minimal-Mistakes 등의 다른 지킬 테마도 [글로벌 패턴을 사용중인 것](https://github.com/mmistakes/minimal-mistakes/blob/master/_config.yml#L168-L169)을 보면 플러그인을 수정하는 쪽이 적절한 것 같습니다.