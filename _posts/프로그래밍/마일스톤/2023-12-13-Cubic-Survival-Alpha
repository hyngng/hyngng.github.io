---
title:  "모바일 서바이벌 게임 만들기: 기획과 초기 개발"

categories: [프로그래밍, 마일스톤]
tags: [프로그래밍, 마일스톤]
image: /assets/img/2023-12-13-cubic-survival-alpha/20230714_191154.gif

toc: true
toc_sticky: true

date: 2023-12-13
last_modified_at: 2023-12-13
---

# **들어가며**

2023년이 되고 저는 할 일을 또 찾아야 했습니다. 이번 해에는 재밌는 것을 만들어보고 싶다는 생각에 제야의 종이 치고나서 몇 가지 계획을 세워봤죠. 이왕이면 프로그래밍 숙련에도 도움이 되고 제가 재밌게 즐길 수 있는 것으로 말입니다.

생뚱맞은 3개 정도 아이디어를 생각해보니 **육하원칙 기반 파이썬 라이브러리, 미러리스풍의 카메라 어플리케이션, 2D 모바일 게임** 등이 나왔습니다. 각각 [파이썬 기반 자동주식거래 프로그램](https://hynrang.github.io/posts/ASTP/)이나 Android Studio로 간단한 어플리케이션을 빌드해본 경험, 또는 [개인 유니티 프로젝트](https://hynrang.github.io/posts/LAV/)에서 파생된 것이었죠.

그런데 게임개발 쪽이 너무 재밌어 보였습니다. 예전에 유니티를 다루어봤을 때 유니티 엔진 그 자체도 신기했지만, 당시에 에셋을 자급자족해서 사용해볼 수 있다는게 굉장히 재미있었거든요. 생고생이기는 하지만 남들에겐 없는 소재로 결과물을 만든다는 그 경험 자체가 매력적이었습니다. 마침 객체지향에 흥미가 있던 참이라, 객체지향 언어 C#을 제대로 다시 사용해보고 싶은 마음에 막무가내로 프로젝트를 시작했습니다.

# **프로젝트 개요**

저는 이 프로젝트에 애착이 점점 불을줄 몰랐습니다. 정말로요, 객체지향의 특징만 빠르게 구현해보고 다음 프로젝트를 시작하자는 마음으로 아주 가볍게 시작했을 뿐이라서 이 프로젝트에는 "부드럽고 특이한 사용자경험을 구현하고 싶다", "필드를 돌아다니며 적을 처치하는 액션 게임을 만들어보고 싶다" 정도를 제외하면 명확한 기획이나 목표라고 할 만한 것이 없습니다. 그나마, 아래 정도를 특기할 수 있을 것 같네요.

- Lerp을 이용하여 씬 전환이나 카메라의 움직임 등을 부드럽게 처리할 것
- 플레이어와 시스템의 상호작용이 일어날 때마다 햅틱 피드백(Vibration)을 줄 것
- 객체지향 설계를 통해 상속과 다형성을 구현할 것
- 코루틴을 사용할 것

결과적으로 위 목표 모두 달성하긴 했는데, 각각의 목표를 어디에서 어떻게 달성했는지는 글이 길어지니 다음 글에서 구체적으로 다루도록 하겠습니다.

# **개발 시작**

![MainMenu](/assets/img/2023-12-13-cubic-survival-alpha/MainMenu.png){: .shadow }
_극 초기의 시작 화면_

처음에는 맹한 메인화면만큼이나 허접했습니다. 그래서 전형적인 바텀업 방식으로 진행하게 되었죠.

### **조이스틱 구현**

클론 코딩 느낌으로 접근하기 시작하면서 "필드를 돌아다니며 적을 처치하는" 2D 모바일 게임 중에는 소울 나이트와 특히 브롤스타즈를 참고했고, 이 두 게임에서 사용하고 있는 정도의 조이스틱을 구현하기로 했습니다.  
처음에는 오토에임을 생각하지도 못했어서, 브롤스타즈에서 구현된 대로 화면 왼쪽에 플레이어 이동을 위한 조이스틱 하나와 오른쪽에 조준용 조이스틱 하나를 만들기로 했죠.

구현에 있어서는 `Unity​Engine.​Input​System.​On​Screen` 패키지의 `OnScreenStick` 클래스를 활용했습니다. 이 클래스에 기반한 새 스크립트를 두 개를 만들고 각각 위상차값에 따라 플레이어 오브젝트와 조준용 투명 오브젝트를 `Translate`하도록 만들었죠. `​On​Screen` 패키지를 다루는 국내 자료가 별로 없어서 **[공식 문서](https://docs.unity3d.com/Packages/com.unity.inputsystem@1.7/api/UnityEngine.InputSystem.OnScreen.OnScreenStick.html?q=OnScreenStick)**를 많이 참고했습니다. 

<!--시각적으로 중심점과 조이스틱이 이어져있는 느낌이 들도록 `LineRenderer`를 사용하려 하기도 했었는데, 당시에는 UI상에 적용할 실력이 부족해서 구현하지 못했다는 아쉬움이 있습니다.-->

(조이스틱 작동 사진?)
(봐줄만한 수준이 완성되었다?)

추가로, 브롤스타즈에서 조이스틱을 중앙으로 옮길 때마다 햅틱 피드백을 주는 것에서 영감을 받아 `OnPointerDown`, `OnPointerUp`시 진동 피드백이 오도록 구성했습니다.

### **URP 적용**

(Light를 적용하고 싶었다) URP(Universal Render Pipeline)

### **인벤토리 구현**

(여기야말로 내가 아주 많이 고민한 부분이지. 내 게임의 독자적인 면모는 여기에서 나온다.)






![Orbit1](/assets/img/2023-12-13-cubic-survival-alpha/Orbit1.gif){: .shadow .w-50 }
_무기 공전_

이때는 아래 정도의 코드를 썼던 것 같습니다.

```cs
    float GetAngle(Vector2 start, Vector2 end)
    {
        Vector2 v2 = end - start;
        return Mathf.Atan2(v2.y, v2.x) * Mathf.Rad2Deg;
    }
```

# **마치며**

(대충 어떤어떤 느낌이 있었고, 다음 글에서 이어서 더 볼 수 있다는 내용)