---
title: "차분한 감성 게임: 기획 및 구성"

categories: [프로그래밍, 마일스톤]
tags: [프로그래밍, 유니티, C#]
image: /2024-03-22-waybound/concept-art-simple.png

toc: true
toc_sticky: true

mermaid: true

date: 2024-03-21
last_modified_at: 2024-03-21
---

# **들어가며**

10년 전에 보았던 영화를 다시 보고, 경험이 가지는 영향력에 대해 생각을 하게 되었습니다. 생각이 어느정도 정리된 후, 좋은 영화가 좋은 경험으로 남는 것처럼 저도 그런 것을 만들어보고 싶다는 생각을 하게 되었죠.

![concept-art](/2024-03-22-waybound/concept-art.png){: .w-50 .shadow }
_친구와 떠들면서 그린 간이 컨셉아트_

그러던 중 예전에 게임 씬 내의 오브젝트들이 서로 상호작용 메모해뒀던 

경험에 초점을 맞추어, 플레이어가 아무 조작을 하지 않아도 게임 씬 내의 오브젝트들이 서로 상호작용하는 환경을 구상했습니다.

```mermaid
gantt
    title 행선지 개발 및 투입 시간
    개발 시작: a1, crit, 2024-02-28, 0d
    목표 출시일: a2, crit, 2024-06-01, 0d
```

# **기획**

이번에도 게임 내 이미지 에셋은 모두 직접 만드려 합니다.

2.5D 환경으로 개발하려 합니다.

# **목표**

## **기술적 목표**

**[직전의 경험](http://127.0.0.1:4000/posts/Cubic-Survival-developing/)**에서 따로 내용을 작성하지는 않았지만, 변수나 함수명을 작성함에 있어서 나중에 보니 네이밍 컨벤션도 엉망이었고, 그렇다고 일관성이나 직관성이 좋지도 않았습니다. 어느 지점에 도달하니 코드를 읽고 수정하기 굉장히 버거워지더라구요.

그러던 중 유니티 블로그에서 **[네이밍 컨벤션을 정리한 글](https://unity.com/how-to/naming-and-code-style-tips-c-scripting-unity)**을 알게 되었습니다. 천천히 읽어보면서 변수명과 함수명은 C#에서 언제 어떤 것을 써야 하는지, 어떻게 작성하면 안 되는지를 명확하게 알 수 있었죠.

제가 알아야 하는 관행이 더 있는지 찾다보니 마찬가지로 유니티에서 발간한 **[Level up your code with game programming patterns](https://blog.unity.com/games/level-up-your-code-with-game-programming-patterns)** E북을 알게 되었습니다. SOLID 원칙이나 팩토리 패턴, 상태 패턴 등등에 대한 내용이 잘 정리되어 있었죠.

그래서 보다 장기적인 유지보수가 가능한 코드 설계를 위해 몇 가지 도전해보고 싶은 것이 생겼습니다.

- PlasticSCM
- 이벤트 주도적 프로그래밍
- 엄격한 네이밍 컨벤션

이외로는 델리게이트, get set 프로퍼티, 코루틴 등을 더 잘 활용해보고 싶다는 생각이 있습니다.

## **예술적 목표**

선과 그림이 움직이는 경험을 주고 싶다는 생각이 들었습니다.

- 컷 애니메이션